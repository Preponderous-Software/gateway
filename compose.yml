version: '3.8'

services:
  # Traefik - The Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      # HTTP
      - "80:80"
      # HTTPS
      - "443:443"
    volumes:
      # Docker socket to communicate with Docker daemon
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Traefik static configuration
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      # Dynamic configuration
      - ./config/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Let's Encrypt certificates
      - ./config/ssl/acme.json:/acme.json
    networks:
      - traefik-network
    labels:
      # Enable Docker provider
      - "traefik.enable=true"
      # Dashboard Service - HTTP Routing
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web"
      # Secure Dashboard - HTTPS Routing with TLS
      - "traefik.http.routers.traefik-dashboard-secure.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dashboard-secure.service=api@internal"
      - "traefik.http.routers.traefik-dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard-secure.tls=true"
      # Dashboard port
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  # Whoami - Example Service
  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.whoami-secure.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami-secure.entrypoints=websecure"
      - "traefik.http.routers.whoami-secure.tls=true"
      # Service port
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  # App1 - Custom Application
  app1:
    build: ./services/app1
    container_name: app1
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.app1.rule=Host(`app1.localhost`)"
      - "traefik.http.routers.app1.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.app1-secure.rule=Host(`app1.localhost`)"
      - "traefik.http.routers.app1-secure.entrypoints=websecure"
      - "traefik.http.routers.app1-secure.tls=true"
      # Service port (assuming app1 runs on port 8000 internally)
      - "traefik.http.services.app1.loadbalancer.server.port=8000"
      # Add middleware for HTTP to HTTPS redirect
      - "traefik.http.routers.app1.middlewares=redirect-to-https@file"

  # Preponderous Website
  preponderous-website:
    build: ./services/preponderous-website
    container_name: preponderous-website
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.preponderous-website.rule=Host(`preponderous.localhost`)"
      - "traefik.http.routers.preponderous-website.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.preponderous-website-secure.rule=Host(`preponderous.localhost`)"
      - "traefik.http.routers.preponderous-website-secure.entrypoints=websecure"
      - "traefik.http.routers.preponderous-website-secure.tls=true"
      # Service port (using port 8080 as detected in the Dockerfile)
      - "traefik.http.services.preponderous-website.loadbalancer.server.port=8080"
      # Add middleware for HTTP to HTTPS redirect
      - "traefik.http.routers.preponderous-website.middlewares=redirect-to-https@file"

  # Dans Plugins Central Website
  dpc-website:
    build: ./services/dpc-website
    container_name: dpc-website
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.dpc-website.rule=Host(`dansplugins.localhost`)"
      - "traefik.http.routers.dpc-website.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.dpc-website-secure.rule=Host(`dansplugins.localhost`)"
      - "traefik.http.routers.dpc-website-secure.entrypoints=websecure"
      - "traefik.http.routers.dpc-website-secure.tls=true"
      # Service port (assuming the Next.js app runs on port 3000 internally)
      - "traefik.http.services.dpc-website.loadbalancer.server.port=3000"
      # Add middleware for HTTP to HTTPS redirect
      - "traefik.http.routers.dpc-website.middlewares=redirect-to-https@file"

  dpcmcserver:
    build: ./services/dpc-mc-server
    image: dpc-mc-server
    container_name: dpc-mc-server
    restart: unless-stopped
    networks:
      - traefik-network
    ports:
      - "25565:25565"
      - "8123:8123"
      - "8100:8100"
    volumes:
      - type: volume
        source: dpcmcserver
        target: /dpcmcserver
      - type: bind
        source: ./deposit-box
        target: /deposit-box
    environment:
      - MINECRAFT_VERSION=1.21.4
      - OPERATOR_UUID=0a9fa342-3139-49d7-8acb-fcf4d9c1f0ef
      - OPERATOR_NAME=DanTheTechMan
      - OPERATOR_LEVEL=4
      - OVERWRITE_EXISTING_SERVER=false
      - ACTIVITY_TRACKER_ENABLED=true
      - ALTERNATE_ACCOUNT_FINDER_ENABLED=true
      - CURRENCIES_ENABLED=true
      - DANS_ESSENTIALS_ENABLED=true
      - DANS_SET_HOME_ENABLED=true
      - DANS_SPAWN_SYSTEM_ENABLED=true
      - FIEFS_ENABLED=false
      - FOOD_SPOILAGE_ENABLED=true
      - MAILBOXES_ENABLED=true
      - MEDIEVAL_ECONOMY_ENABLED=false
      - MEDIEVAL_FACTIONS_ENABLED=true
      - MEDIEVAL_ROLEPLAY_ENGINE_ENABLED=true
      - MORE_RECIPES_ENABLED=true
      - NETHER_ACCESS_CONTROLLER_ENABLED=true
      - NO_MORE_CREEPERS_ENABLED=true
      - PLAYER_LORE_ENABLED=true
      - SIMPLE_SKILLS_ENABLED=true
      - WILD_PETS_ENABLED=true
      - BLUEMAP_ENABLED=false
      - DYNMAP_ENABLED=true
      - PLACEHOLDER_API_ENABLED=true
      - VIA_BACKWARDS_ENABLED=true
      - VIA_VERSION_ENABLED=true
    labels:
      - "traefik.enable=true"
      # Dynmap web interface configuration (port 8123)
      - "traefik.http.routers.dynmap.rule=Host(`dynmap.mc.dansplugins.localhost`)"
      - "traefik.http.routers.dynmap.entrypoints=websecure"
      - "traefik.http.routers.dynmap.tls.certresolver=letsencrypt"
      - "traefik.http.services.dynmap.loadbalancer.server.port=8123"

      # BlueMap web interface configuration (port 8100)
      - "traefik.http.routers.bluemap.rule=Host(`dynmap.mc.dansplugins.localhost`)"
      - "traefik.http.routers.bluemap.entrypoints=websecure"
      - "traefik.http.routers.bluemap.tls.certresolver=letsencrypt"
      - "traefik.http.services.bluemap.loadbalancer.server.port=8100"

volumes:
  dpcmcserver:

networks:
  traefik-network:
    name: traefik-network
    driver: bridge