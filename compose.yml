version: '3.8'

services:
  # Traefik - The Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      # HTTP
      - "80:80"
      # HTTPS
      - "443:443"
      # Dashboard
      - "8080:8080"
    volumes:
      # Docker socket to communicate with Docker daemon
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Traefik static configuration
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      # Dynamic configuration
      - ./config/traefik./dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Let's Encrypt certificates
      - ./config/ssl/acme.json:/acme.json
    networks:
      - traefik-network
    labels:
      # Enable Docker provider
      - "traefik.enable=true"
      # Dashboard Service - HTTP Routing
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web"
      # Secure Dashboard - HTTPS Routing with TLS
      - "traefik.http.routers.traefik-dashboard-secure.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dashboard-secure.service=api@internal"
      - "traefik.http.routers.traefik-dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard-secure.tls=true"
      # Dashboard port
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  # Whoami - Example Service
  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.whoami-secure.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami-secure.entrypoints=websecure"
      - "traefik.http.routers.whoami-secure.tls=true"
      # Service port
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  # App1 - Custom Application
  app1:
    build: ./app1
    container_name: app1
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # HTTP Route
      - "traefik.http.routers.app1.rule=Host(`app1.localhost`)"
      - "traefik.http.routers.app1.entrypoints=web"
      # HTTPS Route with TLS
      - "traefik.http.routers.app1-secure.rule=Host(`app1.localhost`)"
      - "traefik.http.routers.app1-secure.entrypoints=websecure"
      - "traefik.http.routers.app1-secure.tls=true"
      # Service port (assuming app1 runs on port 8000 internally)
      - "traefik.http.services.app1.loadbalancer.server.port=8000"
      # Add middleware for HTTP to HTTPS redirect
      - "traefik.http.routers.app1.middlewares=redirect-to-https@file"

networks:
  traefik-network:
    name: traefik-network
    driver: bridge